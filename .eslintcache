[{"K:\\Social_app\\client\\src\\index.js":"1","K:\\Social_app\\client\\src\\App.js":"2","K:\\Social_app\\client\\src\\reportWebVitals.js":"3","K:\\Social_app\\client\\src\\pageRender.js":"4","K:\\Social_app\\client\\src\\components\\NotFound.js":"5","K:\\Social_app\\client\\src\\pages\\Login.js":"6","K:\\Social_app\\client\\src\\pages\\Register.js":"7","K:\\Social_app\\client\\src\\PageRender.js":"8","K:\\Social_app\\client\\src\\pages\\login.js":"9","K:\\Social_app\\client\\src\\pages\\register.js":"10","K:\\Social_app\\client\\src\\pages\\home.js":"11","K:\\Social_app\\client\\src\\redux\\store.js":"12","K:\\Social_app\\client\\src\\redux\\reducers\\index.js":"13","K:\\Social_app\\client\\src\\redux\\reducers\\authReducer.js":"14","K:\\Social_app\\client\\src\\redux\\actions\\authAction.js":"15","K:\\Social_app\\client\\src\\utils\\fetchData.js":"16","K:\\Social_app\\client\\src\\redux\\actions\\globalTypes.js":"17","K:\\Social_app\\client\\src\\redux\\reducers\\alertReducer.js":"18","K:\\Social_app\\client\\src\\components\\alert\\Toast.js":"19","K:\\Social_app\\client\\src\\components\\alert\\Alert.js":"20","K:\\Social_app\\client\\src\\utils\\valid.js":"21","K:\\Social_app\\client\\src\\components\\alert\\Header.js":"22"},{"size":624,"mtime":1640763048031,"results":"23","hashOfConfig":"24"},{"size":1109,"mtime":1640856340995,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":734,"mtime":1640681555641,"results":"27","hashOfConfig":"24"},{"size":408,"mtime":1640681957309,"results":"28","hashOfConfig":"24"},{"size":3401,"mtime":1640708103248,"results":"29","hashOfConfig":"24"},{"size":156,"mtime":1640684147141,"results":"30","hashOfConfig":"24"},{"size":734,"mtime":1640681555641,"results":"31","hashOfConfig":"24"},{"size":3881,"mtime":1640843623385,"results":"32","hashOfConfig":"24"},{"size":8709,"mtime":1640851848851,"results":"33","hashOfConfig":"24"},{"size":137,"mtime":1640705570344,"results":"34","hashOfConfig":"24"},{"size":512,"mtime":1640753852320,"results":"35","hashOfConfig":"24"},{"size":170,"mtime":1640847473921,"results":"36","hashOfConfig":"24"},{"size":330,"mtime":1640847306992,"results":"37","hashOfConfig":"24"},{"size":3050,"mtime":1640856122022,"results":"38","hashOfConfig":"24"},{"size":938,"mtime":1640759958961,"results":"39","hashOfConfig":"24"},{"size":66,"mtime":1640847036014,"results":"40","hashOfConfig":"24"},{"size":334,"mtime":1640847450452,"results":"41","hashOfConfig":"24"},{"size":761,"mtime":1640845029113,"results":"42","hashOfConfig":"24"},{"size":969,"mtime":1640851061419,"results":"43","hashOfConfig":"24"},{"size":1299,"mtime":1640851841057,"results":"44","hashOfConfig":"24"},{"size":2456,"mtime":1640856478326,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"koavd5",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"K:\\Social_app\\client\\src\\index.js",[],["94","95"],"K:\\Social_app\\client\\src\\App.js",[],"K:\\Social_app\\client\\src\\reportWebVitals.js",[],"K:\\Social_app\\client\\src\\pageRender.js",[],"K:\\Social_app\\client\\src\\components\\NotFound.js",[],"K:\\Social_app\\client\\src\\pages\\Login.js",[],["96","97"],"K:\\Social_app\\client\\src\\pages\\Register.js",[],"K:\\Social_app\\client\\src\\PageRender.js",[],"K:\\Social_app\\client\\src\\pages\\login.js",["98"],"import React, { useState, useEffect } from 'react'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { login } from '../redux/actions/authAction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst Login = () => {\r\n    const initialState = { email: '', password: '' }\r\n    const [userData, setUserData] = useState(initialState)\r\n    const { email, password } = userData\r\n\r\n    const [typePass, setTypePass] = useState(false)\r\n\r\n    const { auth } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if(auth.token) history.push(\"/\")\r\n    }, [auth.token, history])\r\n\r\n    const handleChangeInput = e => {\r\n        const { name, value } = e.target\r\n        setUserData({ ...userData, [name]: value })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        // console.log(userData)\r\n        dispatch(login(userData))\r\n\r\n    }\r\n\r\n    return (\r\n        <div center>\r\n\r\n            <section className='sign-in'>\r\n                <div className='container mt-5'>\r\n                    <div className=\"signin-content\">\r\n\r\n                        <div className='signin-image'>\r\n                            <figure>\r\n                                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQTGWB_-boeAKTKNFnE2azbu3iblEn9L1Aa_Q&usqp=CAU\" />\r\n                            </figure>\r\n                            <NavLink to=\"/register\" className=\"signup-image-link\"> Create an Account</NavLink>\r\n                        </div>\r\n\r\n\r\n                        <div className='signin-form'>\r\n                            <h2 className='\"form-title'>Sign In</h2>\r\n                            <form onSubmit={handleSubmit} className='register-form' id=\"register-form\"  >\r\n\r\n\r\n                                <div className='form-group'>\r\n                                    <label htmlFor='email'>\r\n                                        <i class=\"zmdi zmdi-email material-icons-name\"></i>\r\n                                    </label>\r\n                                    <input type=\"email\" name=\"email\" id=\"email\" autoComplete='off'\r\n                                        onChange={handleChangeInput} value={email}\r\n                                        placeholder='Your Email' />\r\n                                </div>\r\n\r\n\r\n\r\n                                <div className='form-group'>\r\n                                    <label htmlFor='password'>\r\n                                        <i class=\"zmdi zmdi-lock material-icons-name\"></i>\r\n                                    </label>\r\n                                    \r\n                                        <input type={typePass ? \"text\" : \"password\"}\r\n                                            name=\"password\" id=\"password\" autoComplete='off'\r\n                                            onChange={handleChangeInput} value={password}\r\n                                            placeholder='Your Password' />\r\n                                        <small onClick={() => setTypePass(!typePass)}>\r\n                                            {typePass ? 'Hide' : 'Show'}\r\n                                        </small>\r\n                                    \r\n                                </div>\r\n\r\n\r\n                                <div className='form-group form-button'>\r\n                                    <input type=\"submit\" name=\"signin\" id=\"signin\" className='form-submit'\r\n                                        value=\"Log In\"\r\n                                        disabled={email && password ? false : true} />\r\n\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </section >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","K:\\Social_app\\client\\src\\pages\\register.js",["99","100"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory, NavLink } from 'react-router-dom'\r\nimport { register } from '../redux/actions/authAction'\r\n\r\n\r\nconst Register = () => {\r\n    const { auth, alert } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n\r\n    const initialState = {\r\n        fullname: '', username: '', email: '', password: '', cf_password: '', gender: 'male'\r\n    }\r\n    const [userData, setUserData] = useState(initialState)\r\n    const { fullname, username, email, password, cf_password, gender } = userData\r\n\r\n    const [typePass, setTypePass] = useState(false)\r\n    const [typeCfPass, setTypeCfPass] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (auth.token) history.push(\"/\")\r\n    }, [auth.token, history])\r\n\r\n\r\n    const handleChangeInput = e => {\r\n        const { name, value } = e.target\r\n        setUserData({ ...userData, [name]: value })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        dispatch(register(userData))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div center>\r\n\r\n                <section className='signup'>\r\n                    <div className='container mt-5'>\r\n                        <div className=\"signup-content\">\r\n                            <div className='signup-form'>\r\n                                <h2 className='form-title'>Sign up</h2>\r\n                                <form className='register-form' id=\"register-form\" onSubmit={handleSubmit}>\r\n\r\n                                    <div className='form-group'>\r\n                                        <label htmlFor='fullname'>\r\n                                            <i class=\"zmdi zmdi-account material-icons-name\"></i>\r\n                                        </label>\r\n                                        <input type=\"text\" name=\"fullname\" id=\"fullname\" autoComplete='off'\r\n                                            onChange={handleChangeInput} value={fullname}\r\n                                            placeholder='Enter FullName'/>\r\n                                        <small className=\"form-text text-danger\">\r\n                                            {alert.fullname ? alert.fullname : ''}\r\n                                        </small>\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <div className='form-group'>\r\n                                        <label htmlFor='username'>\r\n                                            <i class=\"zmdi zmdi-accounts-list-alt\"></i>\r\n                                        </label>\r\n                                        <input type=\"text\"\r\n                                            name=\"username\" id=\"username\" autoComplete='off'\r\n                                            placeholder='Enter UserName'\r\n                                            onChange={handleChangeInput} value={username}\r\n                                           />\r\n                                        <small className=\"form-text text-danger\">\r\n                                            {alert.username ? alert.username : ''}\r\n                                        </small>\r\n                                    </div>\r\n\r\n                                    <div className='form-group'>\r\n                                        <label htmlFor='exampleInputEmail1'>\r\n                                            <i class=\"zmdi zmdi-email material-icons-name\"></i>\r\n                                        </label>\r\n                                        <input type=\"email\"\r\n                                            name=\"email\" id=\"exampleInputEmail1\" autoComplete='off'\r\n                                            placeholder='Your Email'\r\n                                            onChange={handleChangeInput} value={email}\r\n                                            />\r\n                                        <small className=\"form-text text-danger\">\r\n                                            {alert.email ? alert.email : ''}\r\n                                        </small>\r\n                                    </div>\r\n\r\n                                    <div className='form-group'>\r\n                                        <label htmlFor='exampleInputPassword1'>\r\n                                            <i class=\"zmdi zmdi-lock material-icons-name\"></i>\r\n                                        </label>\r\n\r\n                                        <input type={typePass ? \"text\" : \"password\"}\r\n                                            name=\"password\" id=\"exampleInputPassword1\" autoComplete='off'\r\n                                            placeholder='Your Password'\r\n                                            onChange={handleChangeInput} value={password}\r\n                                           />\r\n                                        <small onClick={() => setTypePass(!typePass)}>\r\n                                            {typePass ? 'Hide' : 'Show'}\r\n                                        </small>\r\n\r\n                                        <small className=\"form-text text-danger\">\r\n                                            {alert.password ? alert.password : ''}\r\n                                        </small>\r\n                                    </div>\r\n\r\n                                    <div className='form-group'>\r\n                                        <label htmlFor='cf_password'>\r\n                                            <i class=\"zmdi zmdi-lock material-icons-name\"></i>\r\n                                        </label>\r\n\r\n                                        <input type={typeCfPass ? \"text\" : \"password\"}\r\n                                            name=\"cf_password\" id=\"cf_password\" autoComplete='off'\r\n                                            placeholder='Confirm Password'\r\n                                            onChange={handleChangeInput} value={cf_password}\r\n                                            />\r\n\r\n                                        <small onClick={() => setTypeCfPass(!typeCfPass)}>\r\n                                            {typeCfPass ? 'Hide' : 'Show'}\r\n                                        </small>\r\n                                        <small className=\"form-text text-danger\">\r\n                                            {alert.cf_password ? alert.cf_password : ''}\r\n                                        </small>\r\n                                    </div>\r\n\r\n                                    <div className=\"row justify-content-between mx-0 mb-2\">\r\n                                        <label htmlFor=\"male\">\r\n                                            Male: <input type=\"radio\" id=\"male\" name=\"gender\"\r\n                                                value=\"male\" defaultChecked onChange={handleChangeInput} />\r\n                                        </label>\r\n\r\n                                        <label htmlFor=\"female\">\r\n                                            Female: <input type=\"radio\" id=\"female\" name=\"gender\"\r\n                                                value=\"female\" onChange={handleChangeInput} />\r\n                                        </label>\r\n\r\n                                        <label htmlFor=\"other\">\r\n\r\n                                            Other: <input type=\"radio\" id=\"other\" name=\"gender\"\r\n                                                value=\"other\" onChange={handleChangeInput} />\r\n                                        </label>\r\n                                    </div>\r\n\r\n                                    <div className='form-group form-button'>\r\n                                        <input type=\"submit\" name=\"signup\" id=\"signup\"\r\n                                            className='btn btn-primary'\r\n                                            value=\"Register\" />\r\n\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className='signup-image'>\r\n                                <figure>\r\n                                    <img src=\"https://ps.w.org/custom-registration-form-builder-with-submission-manager/assets/icon-256x256.png?rev=2547375\" />\r\n                                </figure>\r\n                                <NavLink to=\"/login\" className=\"signup-image-link\"> I am already register</NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </section >\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Register\r\n","K:\\Social_app\\client\\src\\pages\\home.js",[],"K:\\Social_app\\client\\src\\redux\\store.js",[],"K:\\Social_app\\client\\src\\redux\\reducers\\index.js",[],"K:\\Social_app\\client\\src\\redux\\reducers\\authReducer.js",[],"K:\\Social_app\\client\\src\\redux\\actions\\authAction.js",[],"K:\\Social_app\\client\\src\\utils\\fetchData.js",[],"K:\\Social_app\\client\\src\\redux\\actions\\globalTypes.js",[],"K:\\Social_app\\client\\src\\redux\\reducers\\alertReducer.js",[],"K:\\Social_app\\client\\src\\components\\alert\\Toast.js",[],"K:\\Social_app\\client\\src\\components\\alert\\Alert.js",[],"K:\\Social_app\\client\\src\\utils\\valid.js",[],"K:\\Social_app\\client\\src\\components\\alert\\Header.js",["101","102","103","104","105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":42,"column":33,"nodeType":"115","endLine":42,"endColumn":146},{"ruleId":"116","severity":1,"message":"117","line":17,"column":63,"nodeType":"118","messageId":"119","endLine":17,"endColumn":69},{"ruleId":"113","severity":1,"message":"114","line":156,"column":37,"nodeType":"115","endLine":156,"endColumn":160},{"ruleId":"116","severity":1,"message":"120","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"121","line":1,"column":27,"nodeType":"118","messageId":"119","endLine":1,"endColumn":36},{"ruleId":"116","severity":1,"message":"122","line":2,"column":16,"nodeType":"118","messageId":"119","endLine":2,"endColumn":27},{"ruleId":"116","severity":1,"message":"123","line":14,"column":13,"nodeType":"118","messageId":"119","endLine":14,"endColumn":17},{"ruleId":"124","severity":1,"message":"125","line":20,"column":13,"nodeType":"115","endLine":20,"endColumn":46},{"ruleId":"113","severity":1,"message":"114","line":21,"column":17,"nodeType":"115","endLine":23,"endColumn":44},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],["126"],["127"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'gender' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'auth' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]